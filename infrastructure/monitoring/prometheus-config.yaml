apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: knowledge-network
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
      external_labels:
        cluster: 'knowledge-network-production'
        environment: 'production'

    # Alertmanager configuration
    alerting:
      alertmanagers:
        - static_configs:
            - targets:
                - alertmanager:9093

    # Load rules once and periodically evaluate them
    rule_files:
      - '/etc/prometheus/rules/*.yml'

    # Scrape configurations
    scrape_configs:
      # Prometheus itself
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']

      # Kubernetes API server
      - job_name: 'kubernetes-apiservers'
        kubernetes_sd_configs:
          - role: endpoints
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
            action: keep
            regex: default;kubernetes;https

      # Kubernetes nodes
      - job_name: 'kubernetes-nodes'
        kubernetes_sd_configs:
          - role: node
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)

      # Kubernetes pods
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - knowledge-network
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name

      # Application metrics
      - job_name: 'knowledge-network-app'
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - knowledge-network
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_label_app]
            action: keep
            regex: knowledge-network
          - source_labels: [__meta_kubernetes_pod_container_port_name]
            action: keep
            regex: metrics
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-rules
  namespace: knowledge-network
data:
  alerts.yml: |
    groups:
      - name: knowledge-network-alerts
        interval: 30s
        rules:
          # High CPU Usage
          - alert: HighCPUUsage
            expr: rate(container_cpu_usage_seconds_total{pod=~"knowledge-network-.*"}[5m]) > 0.8
            for: 5m
            labels:
              severity: warning
              component: "{{ $labels.pod }}"
            annotations:
              summary: "High CPU usage detected"
              description: "Pod {{ $labels.pod }} CPU usage is above 80% (current: {{ $value }})"

          # High Memory Usage
          - alert: HighMemoryUsage
            expr: container_memory_usage_bytes{pod=~"knowledge-network-.*"} / container_spec_memory_limit_bytes > 0.9
            for: 5m
            labels:
              severity: warning
              component: "{{ $labels.pod }}"
            annotations:
              summary: "High memory usage detected"
              description: "Pod {{ $labels.pod }} memory usage is above 90% (current: {{ $value }})"

          # Pod Restart
          - alert: PodRestartingTooOften
            expr: rate(kube_pod_container_status_restarts_total{namespace="knowledge-network"}[15m]) > 0.1
            for: 5m
            labels:
              severity: critical
              component: "{{ $labels.pod }}"
            annotations:
              summary: "Pod restarting frequently"
              description: "Pod {{ $labels.pod }} has restarted {{ $value }} times in the last 15 minutes"

          # API Response Time
          - alert: HighAPIResponseTime
            expr: histogram_quantile(0.95, http_request_duration_seconds_bucket{job="knowledge-network-app"}) > 1
            for: 5m
            labels:
              severity: warning
              component: api
            annotations:
              summary: "High API response time"
              description: "95th percentile API response time is above 1 second (current: {{ $value }}s)"

          # Error Rate
          - alert: HighErrorRate
            expr: rate(http_requests_total{status=~"5..",job="knowledge-network-app"}[5m]) > 0.05
            for: 5m
            labels:
              severity: critical
              component: api
            annotations:
              summary: "High error rate detected"
              description: "Error rate is above 5% (current: {{ $value }})"

          # Database Connection Pool
          - alert: DatabaseConnectionPoolExhausted
            expr: pg_stat_database_numbackends{datname="knowledge_network"} / pg_settings_max_connections > 0.8
            for: 5m
            labels:
              severity: warning
              component: database
            annotations:
              summary: "Database connection pool near exhaustion"
              description: "Database connection pool is {{ $value }}% utilized"

          # Disk Space
          - alert: LowDiskSpace
            expr: node_filesystem_avail_bytes{mountpoint="/"} / node_filesystem_size_bytes{mountpoint="/"} < 0.1
            for: 5m
            labels:
              severity: critical
              component: infrastructure
            annotations:
              summary: "Low disk space"
              description: "Less than 10% disk space remaining ({{ $value }}% free)"