services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: runtime
    env_file:
      - .env.docker
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    volumes:
      - uploads-data:/app/uploads
    command: ["/bin/sh", "-c", "bunx prisma migrate deploy && bun start"]
    restart: unless-stopped

  realtime:
    image: oven/bun:1
    working_dir: /app
    env_file:
      - .env.docker
    command: ["bun", "--bun", "src/realtime/server.ts"]
    ports:
      - "3005:3005"
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - .:/app
      - collab-data:/app/data/collab
    restart: unless-stopped
    profiles:
      - realtime

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: knowledge
      POSTGRES_PASSWORD: knowledge
      POSTGRES_DB: knowledge_network
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U knowledge"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    command: ["redis-server", "--appendonly", "yes"]
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.3
    environment:
      - node.name=es-node-01
      - cluster.name=knowledge-search-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - xpack.security.enabled=false
      - xpack.security.http.ssl.enabled=false
      - xpack.monitoring.collection.enabled=true
      - http.cors.enabled=true
      - http.cors.allow-origin=*
      - http.cors.allow-headers=X-Requested-With,Content-Type,Content-Length,Authorization
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - es-data:/usr/share/elasticsearch/data
      - ./docker/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
      - ./docker/config/synonyms.txt:/usr/share/elasticsearch/config/synonyms.txt:ro
    ports:
      - "9200:9200"
      - "9300:9300"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    restart: unless-stopped

  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.3
    environment:
      - SERVERNAME=kibana
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=changeme
      - xpack.security.enabled=false
      - telemetry.enabled=false
      - monitoring.ui.enabled=true
    ports:
      - "5601:5601"
    depends_on:
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5601/api/status || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    restart: unless-stopped
    profiles:
      - observability

volumes:
  uploads-data:
  collab-data:
  postgres-data:
  redis-data:
  es-data:
