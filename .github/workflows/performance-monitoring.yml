name: Performance Monitoring

on:
  schedule:
    # Run every 6 hours
    - cron: '0 */6 * * *'
  workflow_dispatch:

jobs:
  lighthouse-audit:
    name: Lighthouse Performance Audit
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: "1.x"

      - name: Install Dependencies
        run: bun install --frozen-lockfile

      - name: Build Application
        run: bun run build

      - name: Start Server
        run: |
          bun run start &
          sleep 10

      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v9
        with:
          configPath: ./.lighthouserc.json
          uploadArtifacts: true

      - name: Store Performance Results
        uses: actions/upload-artifact@v3
        with:
          name: lighthouse-results
          path: .lighthouseci/

  bundle-analysis:
    name: Bundle Size Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: "1.x"

      - name: Install Dependencies
        run: bun install --frozen-lockfile

      - name: Analyze Bundle
        run: |
          ANALYZE=true bun run build

      - name: Upload Bundle Analysis
        uses: actions/upload-artifact@v3
        with:
          name: bundle-analysis
          path: .next/analyze/

  api-performance:
    name: API Performance Testing
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: knowledge_network_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Artillery
        run: npm install -g artillery

      - name: Run API Performance Tests
        run: |
          artillery run tests/performance/api-load-test.yml
        env:
          API_BASE_URL: http://localhost:4000

      - name: Store Performance Results
        uses: actions/upload-artifact@v3
        with:
          name: api-performance-results
          path: performance-results.json